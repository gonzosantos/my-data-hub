{
  "version": "0.29.0",
  "commands": {
    "introspect": {
      "id": "introspect",
      "description": "introspects a GraphQL Schema",
      "strict": true,
      "pluginName": "@graphql-hive/cli",
      "pluginAlias": "@graphql-hive/cli",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "write": {
          "name": "write",
          "type": "option",
          "description": "Write to a file (possible extensions: .graphql, .gql, .gqls, .graphqls, .json)",
          "multiple": false,
          "aliases": [
            "W"
          ]
        },
        "header": {
          "name": "header",
          "type": "option",
          "description": "HTTP header to add to the introspection request (in key:value format)",
          "multiple": true,
          "aliases": [
            "H"
          ]
        }
      },
      "args": {
        "location": {
          "name": "location",
          "description": "GraphQL Schema location (URL or file path/glob)",
          "required": true,
          "hidden": false
        }
      }
    },
    "whoami": {
      "id": "whoami",
      "description": "shows information about the current token",
      "strict": true,
      "pluginName": "@graphql-hive/cli",
      "pluginAlias": "@graphql-hive/cli",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "registry.endpoint": {
          "name": "registry.endpoint",
          "type": "option",
          "description": "registry endpoint",
          "multiple": false
        },
        "registry": {
          "name": "registry",
          "type": "option",
          "description": "registry address",
          "multiple": false,
          "deprecated": {
            "message": "use --registry.endpoint instead",
            "version": "0.21.0"
          }
        },
        "registry.accessToken": {
          "name": "registry.accessToken",
          "type": "option",
          "description": "registry access token",
          "multiple": false
        },
        "token": {
          "name": "token",
          "type": "option",
          "description": "api token",
          "multiple": false,
          "deprecated": {
            "message": "use --registry.accessToken instead",
            "version": "0.21.0"
          }
        }
      },
      "args": {}
    },
    "artifact:fetch": {
      "id": "artifact:fetch",
      "description": "fetch artifacts from the CDN",
      "strict": true,
      "pluginName": "@graphql-hive/cli",
      "pluginAlias": "@graphql-hive/cli",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "cdn.endpoint": {
          "name": "cdn.endpoint",
          "type": "option",
          "description": "CDN endpoint",
          "multiple": false
        },
        "cdn.accessToken": {
          "name": "cdn.accessToken",
          "type": "option",
          "description": "CDN access token",
          "multiple": false
        },
        "artifact": {
          "name": "artifact",
          "type": "option",
          "description": "artifact to fetch (Note: supergraph is only available for federation projects)",
          "required": true,
          "multiple": false,
          "options": [
            "sdl",
            "supergraph",
            "metadata",
            "services",
            "sdl.graphql",
            "sdl.graphqls"
          ]
        },
        "outputFile": {
          "name": "outputFile",
          "type": "option",
          "description": "whether to write to a file instead of stdout",
          "multiple": false
        }
      },
      "args": {}
    },
    "config:delete": {
      "id": "config:delete",
      "description": "deletes specific cli configuration",
      "strict": true,
      "pluginName": "@graphql-hive/cli",
      "pluginAlias": "@graphql-hive/cli",
      "pluginType": "core",
      "aliases": [],
      "flags": {},
      "args": {
        "key": {
          "name": "key",
          "description": "config key",
          "required": true
        }
      }
    },
    "config:get": {
      "id": "config:get",
      "description": "prints specific cli configuration",
      "strict": true,
      "pluginName": "@graphql-hive/cli",
      "pluginAlias": "@graphql-hive/cli",
      "pluginType": "core",
      "aliases": [],
      "flags": {},
      "args": {
        "key": {
          "name": "key",
          "description": "config key",
          "required": true,
          "options": [
            "registry",
            "cdn"
          ]
        }
      }
    },
    "config:reset": {
      "id": "config:reset",
      "description": "resets local cli configuration",
      "strict": true,
      "pluginName": "@graphql-hive/cli",
      "pluginAlias": "@graphql-hive/cli",
      "pluginType": "core",
      "aliases": [],
      "flags": {},
      "args": {}
    },
    "config:set": {
      "id": "config:set",
      "description": "updates specific cli configuration",
      "strict": true,
      "pluginName": "@graphql-hive/cli",
      "pluginAlias": "@graphql-hive/cli",
      "pluginType": "core",
      "aliases": [],
      "flags": {},
      "args": {
        "key": {
          "name": "key",
          "description": "config key",
          "required": true,
          "options": [
            "registry",
            "cdn"
          ]
        },
        "value": {
          "name": "value",
          "description": "config value",
          "required": true
        }
      }
    },
    "operations:check": {
      "id": "operations:check",
      "description": "checks operations against a published schema",
      "strict": true,
      "pluginName": "@graphql-hive/cli",
      "pluginAlias": "@graphql-hive/cli",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "registry.endpoint": {
          "name": "registry.endpoint",
          "type": "option",
          "description": "registry endpoint",
          "multiple": false
        },
        "registry": {
          "name": "registry",
          "type": "option",
          "description": "registry address",
          "multiple": false,
          "deprecated": {
            "message": "use --registry.endpoint instead",
            "version": "0.21.0"
          }
        },
        "registry.accessToken": {
          "name": "registry.accessToken",
          "type": "option",
          "description": "registry access token",
          "multiple": false
        },
        "token": {
          "name": "token",
          "type": "option",
          "description": "api token",
          "multiple": false,
          "deprecated": {
            "message": "use --registry.accessToken instead",
            "version": "0.21.0"
          }
        },
        "require": {
          "name": "require",
          "type": "option",
          "description": "Loads specific require.extensions before running the command",
          "multiple": true,
          "default": []
        },
        "graphqlTag": {
          "name": "graphqlTag",
          "type": "option",
          "description": "Identify template literals containing GraphQL queries in JavaScript/TypeScript code. Supports multiple values.\nExamples:\n  --graphqlTag graphql-tag (Equivalent to: import gqlTagFunction from \"graphql-tag\")\n  --graphqlTag graphql:react-relay (Equivalent to: import { graphql } from \"react-relay\")",
          "multiple": true
        },
        "globalGraphqlTag": {
          "name": "globalGraphqlTag",
          "type": "option",
          "description": "Allows to use a global identifier instead of a module import. Similar to --graphqlTag.\nExamples:\n  --globalGraphqlTag gql (Supports: export const meQuery = gql`{ me { id } }`)\n  --globalGraphqlTag graphql (Supports: export const meQuery = graphql`{ me { id } }`)",
          "multiple": true
        }
      },
      "args": {
        "file": {
          "name": "file",
          "description": "Glob pattern to find the operations",
          "required": true,
          "hidden": false
        }
      }
    },
    "schema:check": {
      "id": "schema:check",
      "description": "checks schema",
      "strict": true,
      "pluginName": "@graphql-hive/cli",
      "pluginAlias": "@graphql-hive/cli",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "service": {
          "name": "service",
          "type": "option",
          "description": "service name (only for distributed schemas)",
          "multiple": false
        },
        "registry.endpoint": {
          "name": "registry.endpoint",
          "type": "option",
          "description": "registry endpoint",
          "multiple": false
        },
        "registry": {
          "name": "registry",
          "type": "option",
          "description": "registry address",
          "multiple": false,
          "deprecated": {
            "message": "use --registry.endpoint instead",
            "version": "0.21.0"
          }
        },
        "registry.accessToken": {
          "name": "registry.accessToken",
          "type": "option",
          "description": "registry access token",
          "multiple": false
        },
        "token": {
          "name": "token",
          "type": "option",
          "description": "api token",
          "multiple": false,
          "deprecated": {
            "message": "use --registry.accessToken instead",
            "version": "0.21.0"
          }
        },
        "forceSafe": {
          "name": "forceSafe",
          "type": "boolean",
          "description": "mark the check as safe, breaking changes are expected",
          "allowNo": false
        },
        "github": {
          "name": "github",
          "type": "boolean",
          "description": "Connect with GitHub Application",
          "allowNo": false
        },
        "require": {
          "name": "require",
          "type": "option",
          "description": "Loads specific require.extensions before running the codegen and reading the configuration",
          "multiple": true,
          "default": []
        },
        "author": {
          "name": "author",
          "type": "option",
          "description": "Author of the change",
          "multiple": false
        },
        "commit": {
          "name": "commit",
          "type": "option",
          "description": "Associated commit sha",
          "multiple": false
        }
      },
      "args": {
        "file": {
          "name": "file",
          "description": "Path to the schema file(s)",
          "required": true,
          "hidden": false
        }
      }
    },
    "schema:delete": {
      "id": "schema:delete",
      "description": "deletes a schema",
      "strict": true,
      "pluginName": "@graphql-hive/cli",
      "pluginAlias": "@graphql-hive/cli",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "registry.endpoint": {
          "name": "registry.endpoint",
          "type": "option",
          "description": "registry endpoint",
          "multiple": false
        },
        "registry": {
          "name": "registry",
          "type": "option",
          "description": "registry address",
          "multiple": false,
          "deprecated": {
            "message": "use --registry.accessToken instead",
            "version": "0.21.0"
          }
        },
        "registry.accessToken": {
          "name": "registry.accessToken",
          "type": "option",
          "description": "registry access token",
          "multiple": false
        },
        "token": {
          "name": "token",
          "type": "option",
          "description": "api token",
          "multiple": false,
          "deprecated": {
            "message": "use --registry.accessToken instead",
            "version": "0.21.0"
          }
        },
        "dryRun": {
          "name": "dryRun",
          "type": "boolean",
          "description": "Does not delete the service, only reports what it would have done.",
          "allowNo": false
        },
        "confirm": {
          "name": "confirm",
          "type": "boolean",
          "description": "Confirm deletion of the service",
          "allowNo": false
        }
      },
      "args": {
        "service": {
          "name": "service",
          "description": "name of the service",
          "required": true,
          "hidden": false
        }
      }
    },
    "schema:fetch": {
      "id": "schema:fetch",
      "description": "fetch schema or supergraph from the Hive API",
      "strict": true,
      "pluginName": "@graphql-hive/cli",
      "pluginAlias": "@graphql-hive/cli",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "registry": {
          "name": "registry",
          "type": "option",
          "description": "registry address",
          "multiple": false,
          "deprecated": {
            "message": "use --registry.endpoint instead",
            "version": "0.21.0"
          }
        },
        "token": {
          "name": "token",
          "type": "option",
          "description": "api token",
          "multiple": false,
          "deprecated": {
            "message": "use --registry.accessToken instead",
            "version": "0.21.0"
          }
        },
        "registry.endpoint": {
          "name": "registry.endpoint",
          "type": "option",
          "description": "registry endpoint",
          "multiple": false
        },
        "registry.accessToken": {
          "name": "registry.accessToken",
          "type": "option",
          "description": "registry access token",
          "multiple": false
        },
        "type": {
          "name": "type",
          "type": "option",
          "description": "Type to fetch (possible types: sdl, supergraph)",
          "multiple": false,
          "aliases": [
            "T"
          ]
        },
        "write": {
          "name": "write",
          "type": "option",
          "description": "Write to a file (possible extensions: .graphql, .gql, .gqls, .graphqls)",
          "multiple": false,
          "aliases": [
            "W"
          ]
        },
        "outputFile": {
          "name": "outputFile",
          "type": "option",
          "description": "whether to write to a file instead of stdout",
          "multiple": false
        }
      },
      "args": {
        "actionId": {
          "name": "actionId",
          "description": "action id (e.g. commit sha)",
          "required": true,
          "hidden": false
        }
      }
    },
    "schema:publish": {
      "id": "schema:publish",
      "description": "publishes schema",
      "strict": true,
      "pluginName": "@graphql-hive/cli",
      "pluginAlias": "@graphql-hive/cli",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "service": {
          "name": "service",
          "type": "option",
          "description": "service name (only for distributed schemas)",
          "multiple": false
        },
        "url": {
          "name": "url",
          "type": "option",
          "description": "service url (only for distributed schemas)",
          "multiple": false
        },
        "metadata": {
          "name": "metadata",
          "type": "option",
          "description": "additional metadata to attach to the GraphQL schema. This can be a string with a valid JSON, or a path to a file containing a valid JSON",
          "multiple": false
        },
        "registry.endpoint": {
          "name": "registry.endpoint",
          "type": "option",
          "description": "registry endpoint",
          "multiple": false
        },
        "registry": {
          "name": "registry",
          "type": "option",
          "description": "registry address",
          "multiple": false,
          "deprecated": {
            "message": "use --registry.endpoint instead",
            "version": "0.21.0"
          }
        },
        "registry.accessToken": {
          "name": "registry.accessToken",
          "type": "option",
          "description": "registry access token",
          "multiple": false
        },
        "token": {
          "name": "token",
          "type": "option",
          "description": "api token",
          "multiple": false,
          "deprecated": {
            "message": "use --registry.accessToken instead",
            "version": "0.21.0"
          }
        },
        "author": {
          "name": "author",
          "type": "option",
          "description": "author of the change",
          "multiple": false
        },
        "commit": {
          "name": "commit",
          "type": "option",
          "description": "associated commit sha",
          "multiple": false
        },
        "github": {
          "name": "github",
          "type": "boolean",
          "description": "Connect with GitHub Application",
          "allowNo": false
        },
        "force": {
          "name": "force",
          "type": "boolean",
          "description": "force publish even on breaking changes",
          "allowNo": false,
          "deprecated": {
            "message": "--force is enabled by default for newly created projects"
          }
        },
        "experimental_acceptBreakingChanges": {
          "name": "experimental_acceptBreakingChanges",
          "type": "boolean",
          "description": "(experimental) accept breaking changes and mark schema as valid (only if composable)",
          "allowNo": false,
          "deprecated": {
            "message": "--experimental_acceptBreakingChanges is enabled by default for newly created projects"
          }
        },
        "require": {
          "name": "require",
          "type": "option",
          "description": "Loads specific require.extensions before running the codegen and reading the configuration",
          "multiple": true,
          "default": []
        }
      },
      "args": {
        "file": {
          "name": "file",
          "description": "Path to the schema file(s)",
          "required": true,
          "hidden": false
        }
      }
    }
  }
}